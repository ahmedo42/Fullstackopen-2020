{"version":3,"sources":["components/Phonebook.js","components/Search.js","components/People.js","components/Message.js","services/Backend.js","App.js","index.js"],"names":["Phonebook","props","onSubmit","add","value","name","onChange","nameChange","number","numberChange","type","Search","results","term","search","Person","person","onClick","remove","title","id","People","people","map","Message","MessageStyle","color","fontSize","textAlign","message","border","style","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useEffect","phoneService","initialPeople","setPeople","setDisplay","useState","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","display","setMessage","event","preventDefault","filter","toLowerCase","includes","target","temp","find","undefined","alert","window","confirm","updatedPerson","console","log","returnedPerson","p","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e49ba5b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Phonebook = (props) => {  \r\n    return(\r\n    <div>\r\n        <form onSubmit={props.add}>\r\n          <div>\r\n            name: <input value = {props.name} onChange={props.nameChange} />\r\n            <br/>\r\n            number: <input value = {props.number} onChange={props.numberChange} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" >add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\nexport default Phonebook","import React from 'react'\r\n\r\nconst Search = (props) =>{\r\n    return (\r\n        <div>\r\n            <h3>filter by name</h3>\r\n            <form onSubmit = {props.results}>\r\n            <input value = {props.term} onChange = {props.search}/>\r\n            </form>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst Person =  (props) =>{\r\n    return(\r\n    <p>{props.person.name} {props.person.number} <button onClick = {props.remove} title = {props.person.id}> Delete </button></p>\r\n    )\r\n}\r\n\r\nconst People = (props) =>{\r\n    return (\r\n        <div>\r\n        {props.people.map(person => <Person person = {person} remove = {props.remove}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default People","import React from 'react'\r\n\r\nconst Message = (props) => {\r\n    let MessageStyle  = {\r\n        color : 'green',\r\n        fontSize : 20,\r\n        textAlign : \"center\",\r\n    }\r\n    if(props.message !== '' && props.message !== null){\r\n        MessageStyle.border = \"solid\";\r\n    }\r\n    return(\r\n        <div style = {MessageStyle}>\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request =  axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request =  axios.post(baseUrl , newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id , newPerson)  => {\r\n    const request = axios.put(`${baseUrl}/${id}` , newPerson);\r\n    return request.then(response => response.data) \r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request;\r\n}\r\nexport default {getAll , create , update , remove}","import React , {useState , useEffect} from 'react';\r\nimport Phonebook from './components/Phonebook'\r\nimport Search from './components/Search'\r\nimport People from './components/People';\r\nimport Message from './components/Message';\r\nimport phoneService from './services/Backend'\r\n\r\nconst App = () => {\r\n  \r\n  \r\n    const hook = () => {\r\n        phoneService\r\n        .getAll()\r\n        .then(initialPeople => {\r\n          setPeople(initialPeople);\r\n          setDisplay(initialPeople);\r\n        })\r\n    }\r\n    useEffect(hook,[]);\r\n    const [ people, setPeople ] = useState([]);\r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber ,  setNewNumber] = useState('');\r\n    const [searchTerm , setSearchTerm] = useState('');\r\n    const [display , setDisplay] = useState(people)\r\n    const [message , setMessage] = useState('');\r\n\r\n    const addPerson = (event) =>{\r\n      event.preventDefault();\r\n      const temp = people.find(person => person.name == newName);\r\n      if(temp !== undefined){\r\n        if(newNumber  == ''){\r\n          alert(`${newName} is already in the notebook`);\r\n        }\r\n        else{\r\n           if(window.confirm(\"want to update phone number\")){\r\n            const updatedPerson = {name : newName , number :newNumber};\r\n            const id = temp.id\r\n            console.log(updatedPerson);\r\n            phoneService\r\n            .update(id , updatedPerson)\r\n            .then(returnedPerson => {\r\n              setPeople(people.map(p => p.id !== id ? p : returnedPerson));\r\n              console.log(people);\r\n              setDisplay(display.map(p => p.id !== id ? p : returnedPerson));\r\n              console.log(display)\r\n              setMessage(`updated ${returnedPerson.name}`);\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000);\r\n            })\r\n           }\r\n           \r\n        }\r\n        setNewName('');\r\n        setNewNumber('');\r\n      }\r\n      else if(newNumber !== ''){\r\n        const person = {\r\n          name : newName,\r\n          number : newNumber,\r\n        }\r\n        phoneService\r\n        .create(person)\r\n        .then(returnedPerson => {\r\n          setPeople(people.concat(returnedPerson));\r\n          setDisplay(people.concat(returnedPerson));\r\n          setMessage(`created ${returnedPerson.name}`);\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 5000);\r\n          setNewName(''); \r\n          setNewNumber('');\r\n        })\r\n      }\r\n      else{\r\n        alert(\"enter a phone number\");\r\n      }\r\n    }\r\n\r\n    const removeWithId = (event) => {\r\n      const id = event.target.title;\r\n      if(window.confirm(\"you really want to delete this?\")){\r\n        phoneService\r\n        .remove(id)\r\n        .then(() => {\r\n          let temp = people.find(p => p.id == id).name;\r\n          setMessage(`removed ${temp}`);\r\n          setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000);\r\n          setDisplay(display.filter(p => p.id != id));\r\n          setPeople(people.filter(p => p.id != id));\r\n        })\r\n      }\r\n    }\r\n    const getResults = (event) => {\r\n      event.preventDefault()\r\n      const results = people.filter(person =>\r\n        person.name.toLowerCase().includes(searchTerm)\r\n      );\r\n      setDisplay(results);\r\n    }\r\n    const handleSearch = (event) =>{\r\n      setSearchTerm(event.target.value);\r\n    }\r\n    const handleNameChange = (event)=>{\r\n      setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event)=>{\r\n      setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <Message message = {message}/>\r\n      <Search results = {getResults} search = {handleSearch} term = {searchTerm}/>\r\n      <h2>Phonebook</h2>\r\n      <Phonebook add = {addPerson} \r\n      nameChange ={handleNameChange} \r\n      numberChange = {handleNumberChange}\r\n      name = {newName}\r\n      number = {newNumber}/>\r\n      <h2>Numbers</h2>\r\n      <People  people = {display} remove = {removeWithId} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default App","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App/> , document.getElementById('root'))\n"],"sourceRoot":""}